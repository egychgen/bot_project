Техническая документация bot_project


bot.py

Общение бота с API телеграмма реализовано через библиотеку telegram.ext.

Бот имеет несколько глобальных пременных, так как для задания объектов класса и других вещей необходимо несколько значений, а бот умеет коллекционировать
информацию пользователя только пошагово.
Далее есть наборы функций, позволяющие кореектно настроить общение с пользователем. Они разбиты на разделы. В разделе "Набор команд" функции, которые выпол-
няются при вызове команд. В разделе "Клавиатура" одна большая функция, которая при разных значениях выдает разные клавиатуры с разным набором кнопок.
В разделе "Функции для сбора информации о комапнии" описаны функции для получения тикера нужной компании от пользователя или из базы данных. Также позволя-
ют задать страну регистрации компании. В разделе "Функции для работы с мультипликаторами" функции, осуществляющие работу после нажатия на кнопку "Мульти-
пликаторы". Они выдают значения мультипликаторов, которые парсятся с сайтов. Функции в разделе "Функции для работы с графиком 1 компаний" позволяют вызвать
функцию по построению графиком и отправить картинку пользователю. Также ондна из них определяет рассматриваемый период времени. Функции в разделе
"Функции для работы с графиком 2x компаний" позволют строить график 2 компаний при помощи функции из другого файла. Также они выводят построенный график и
позволяют правильно задать тикер компании либо вручную введенного от пользователя, либо из базы данных. Функции в разделе "Другие функции" осуществляют функ-
цию других кнопок, либо являются вспомогательным. В функции main заданы все handler'ы команд и настроена сама схема общения пользователя с ботом.
 


database_and_class_interfaceю.py

Интерфейс который после запроса от бота отправляет запрос в базу данных, создает 
в ней новую запись или берет из нее данные о компании и создает объект класса Company


DataBase.py

Область работы с базой данных SQLite3. В базе данных Finance_bot.db есть две таблицы: user -
таблица пользователей бота и companies - таблица компаний, в таблице компаний в данной реализации
4 колонки tiker, fullname, country, info. На данный момент бд была заполнена автоматически при помощи одного 
из методов области parsing интерфейса взаимодействия БД и класса. 
db_intialise() - создает файл Financebot.db и создает в нем нужные таблице, 
используется для обнуления базы данных.
Остальные функция и менют названия db_get_* и db_add_* Соотственно достающие и кладущие данные в(из)
БД.

CompaniesClass.py

Класс компания, принимает значение тикера компании и страны регистрации
Доступные методы:
    get_multiplicators принимает массив имен необходимых мультипликаторов(Мультипликатор -
        это коэффициент пропорциональности, который измеряет, насколько эндогенная переменная
        изменяется в ответ на изменение некоторой экзогенной переменной.), исходя из определения не трудно понять, \
        что мультипликатор - некое отношение => в его названии обязательно должен содержаться "/".
        Возвращает словарь в котором ключи - значения мультипликаторов, а значения - значания
    get_company_stocks_graphic принимает на вход дату - массив из двух дат в секундах от 1970 года
        (значения стоит преобразовывать через библиотеку datetime)
        Сохраниет график в текущую директорию с название тикер.png
    compare_graphics_of_to_companies принимает на вход дату и другой объект класса company, строит график
        цен обоих компаний на одном поле.
    get_price Возвращает цену (тип строка)
    get_info Возвращает информацию о компании, если таковой нет возвращает что нет информации
    get_fullname - возвращает название компании
    get_country - возвращает страну регистрации компании
    get_tiker - возвращает тикер компании

    parsing_divd Сохраняет в диррикторию таблицу с дивами в пдф
Скрытые методы:
    _Get_multiplicator_of_Russian_Comp
    _Get_multiplicator_of_Abroad_Comp
    Обе функции парсят мультипликторы, просто с различных сайтов

parsing.py

Область работы с внешними данными
Функции из данной области используются в методах класса Company
Данные беруться с сайтов:
https://investmint.ru/
https://api.bcs.ru/
https://smart-lab.ru/
http://www.cbr.ru/
https://finsovetnik.com/

Во всех функциях данно области при помощи библиотеки requests отправляется запрос,
который возвращает html текст или json файл в зависимости от ресурса. Далее идет 
обработка результатов запроса и возврат. Все функции данной области имеют самодокументирующиеся
название в который после parse указывается то, что будет возвращено в данных функциях.




















